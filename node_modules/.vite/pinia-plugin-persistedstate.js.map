{
  "version": 3,
  "sources": ["dep:pinia-plugin-persistedstate", "../pinia-plugin-persistedstate/dist/index.mjs"],
  "sourcesContent": ["import d from \"./node_modules/pinia-plugin-persistedstate/dist/index.mjs\";export default d;\nexport * from \"./node_modules/pinia-plugin-persistedstate/dist/index.mjs\"", "// src/normalize.ts\nfunction isObject(v) {\n  return typeof v === \"object\" && v !== null;\n}\nfunction normalizeOptions(options, factoryOptions) {\n  options = isObject(options) ? options : /* @__PURE__ */ Object.create(null);\n  return new Proxy(options, {\n    get(target, key, receiver) {\n      if (key === \"key\")\n        return Reflect.get(target, key, receiver);\n      return Reflect.get(target, key, receiver) || Reflect.get(factoryOptions, key, receiver);\n    }\n  });\n}\n\n// src/pick.ts\nfunction get(state, path) {\n  return path.reduce((obj, p) => {\n    return obj == null ? void 0 : obj[p];\n  }, state);\n}\nfunction set(state, path, val) {\n  return path.slice(0, -1).reduce((obj, p) => {\n    if (/^(__proto__)$/.test(p))\n      return {};\n    else\n      return obj[p] = obj[p] || {};\n  }, state)[path[path.length - 1]] = val, state;\n}\nfunction pick(baseState, paths) {\n  return paths.reduce((substate, path) => {\n    const pathArray = path.split(\".\");\n    return set(substate, pathArray, get(baseState, pathArray));\n  }, {});\n}\n\n// src/plugin.ts\nfunction parsePersistence(factoryOptions, store) {\n  return (o) => {\n    var _a;\n    try {\n      const {\n        storage = localStorage,\n        beforeRestore = void 0,\n        afterRestore = void 0,\n        serializer = {\n          serialize: JSON.stringify,\n          deserialize: JSON.parse\n        },\n        key = store.$id,\n        paths = null,\n        debug = false\n      } = o;\n      return {\n        storage,\n        beforeRestore,\n        afterRestore,\n        serializer,\n        key: ((_a = factoryOptions.key) != null ? _a : (k) => k)(typeof key == \"string\" ? key : key(store.$id)),\n        paths,\n        debug\n      };\n    } catch (e) {\n      if (o.debug)\n        console.error(\"[pinia-plugin-persistedstate]\", e);\n      return null;\n    }\n  };\n}\nfunction hydrateStore(store, { storage, serializer, key, debug }) {\n  try {\n    const fromStorage = storage == null ? void 0 : storage.getItem(key);\n    if (fromStorage)\n      store.$patch(serializer == null ? void 0 : serializer.deserialize(fromStorage));\n  } catch (e) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", e);\n  }\n}\nfunction persistState(state, { storage, serializer, key, paths, debug }) {\n  try {\n    const toStore = Array.isArray(paths) ? pick(state, paths) : state;\n    storage.setItem(key, serializer.serialize(toStore));\n  } catch (e) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", e);\n  }\n}\nfunction createPersistedState(factoryOptions = {}) {\n  return (context) => {\n    const { auto = false } = factoryOptions;\n    const {\n      options: { persist = auto },\n      store,\n      pinia\n    } = context;\n    if (!persist)\n      return;\n    if (!(store.$id in pinia.state.value)) {\n      const original_store = pinia._s.get(store.$id.replace(\"__hot:\", \"\"));\n      if (original_store)\n        Promise.resolve().then(() => original_store.$persist());\n      return;\n    }\n    const persistences = (Array.isArray(persist) ? persist.map((p) => normalizeOptions(p, factoryOptions)) : [normalizeOptions(persist, factoryOptions)]).map(parsePersistence(factoryOptions, store)).filter(Boolean);\n    store.$persist = () => {\n      persistences.forEach((persistence) => {\n        persistState(store.$state, persistence);\n      });\n    };\n    store.$hydrate = ({ runHooks = true } = {}) => {\n      persistences.forEach((persistence) => {\n        const { beforeRestore, afterRestore } = persistence;\n        if (runHooks)\n          beforeRestore == null ? void 0 : beforeRestore(context);\n        hydrateStore(store, persistence);\n        if (runHooks)\n          afterRestore == null ? void 0 : afterRestore(context);\n      });\n    };\n    persistences.forEach((persistence) => {\n      const { beforeRestore, afterRestore } = persistence;\n      beforeRestore == null ? void 0 : beforeRestore(context);\n      hydrateStore(store, persistence);\n      afterRestore == null ? void 0 : afterRestore(context);\n      store.$subscribe(\n        (_mutation, state) => {\n          persistState(state, persistence);\n        },\n        {\n          detached: true\n        }\n      );\n    });\n  };\n}\n\n// src/index.ts\nvar src_default = createPersistedState();\nexport {\n  createPersistedState,\n  src_default as default\n};\n"],
  "mappings": "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",
  "names": []
}
