{
  "version": 3,
  "sources": ["dep:pinia-plugin-persistedstate", "../pinia-plugin-persistedstate/dist/index.mjs"],
  "sourcesContent": ["import d from \"./node_modules/pinia-plugin-persistedstate/dist/index.mjs\";export default d;\nexport * from \"./node_modules/pinia-plugin-persistedstate/dist/index.mjs\"", "// src/normalize.ts\r\nfunction isObject(v) {\r\n  return typeof v === \"object\" && v !== null;\r\n}\r\nfunction normalizeOptions(options, factoryOptions) {\r\n  options = isObject(options) ? options : /* @__PURE__ */ Object.create(null);\r\n  return new Proxy(options, {\r\n    get(target, key, receiver) {\r\n      if (key === \"key\")\r\n        return Reflect.get(target, key, receiver);\r\n      return Reflect.get(target, key, receiver) || Reflect.get(factoryOptions, key, receiver);\r\n    }\r\n  });\r\n}\r\n\r\n// src/pick.ts\r\nfunction get(state, path) {\r\n  return path.reduce((obj, p) => {\r\n    return obj == null ? void 0 : obj[p];\r\n  }, state);\r\n}\r\nfunction set(state, path, val) {\r\n  return path.slice(0, -1).reduce((obj, p) => {\r\n    if (/^(__proto__)$/.test(p))\r\n      return {};\r\n    else\r\n      return obj[p] = obj[p] || {};\r\n  }, state)[path[path.length - 1]] = val, state;\r\n}\r\nfunction pick(baseState, paths) {\r\n  return paths.reduce((substate, path) => {\r\n    const pathArray = path.split(\".\");\r\n    return set(substate, pathArray, get(baseState, pathArray));\r\n  }, {});\r\n}\r\n\r\n// src/plugin.ts\r\nfunction parsePersistence(factoryOptions, store) {\r\n  return (o) => {\r\n    var _a;\r\n    try {\r\n      const {\r\n        storage = localStorage,\r\n        beforeRestore = void 0,\r\n        afterRestore = void 0,\r\n        serializer = {\r\n          serialize: JSON.stringify,\r\n          deserialize: JSON.parse\r\n        },\r\n        key = store.$id,\r\n        paths = null,\r\n        debug = false\r\n      } = o;\r\n      return {\r\n        storage,\r\n        beforeRestore,\r\n        afterRestore,\r\n        serializer,\r\n        key: ((_a = factoryOptions.key) != null ? _a : (k) => k)(typeof key == \"string\" ? key : key(store.$id)),\r\n        paths,\r\n        debug\r\n      };\r\n    } catch (e) {\r\n      if (o.debug)\r\n        console.error(\"[pinia-plugin-persistedstate]\", e);\r\n      return null;\r\n    }\r\n  };\r\n}\r\nfunction hydrateStore(store, { storage, serializer, key, debug }) {\r\n  try {\r\n    const fromStorage = storage == null ? void 0 : storage.getItem(key);\r\n    if (fromStorage)\r\n      store.$patch(serializer == null ? void 0 : serializer.deserialize(fromStorage));\r\n  } catch (e) {\r\n    if (debug)\r\n      console.error(\"[pinia-plugin-persistedstate]\", e);\r\n  }\r\n}\r\nfunction persistState(state, { storage, serializer, key, paths, debug }) {\r\n  try {\r\n    const toStore = Array.isArray(paths) ? pick(state, paths) : state;\r\n    storage.setItem(key, serializer.serialize(toStore));\r\n  } catch (e) {\r\n    if (debug)\r\n      console.error(\"[pinia-plugin-persistedstate]\", e);\r\n  }\r\n}\r\nfunction createPersistedState(factoryOptions = {}) {\r\n  return (context) => {\r\n    const { auto = false } = factoryOptions;\r\n    const {\r\n      options: { persist = auto },\r\n      store,\r\n      pinia\r\n    } = context;\r\n    if (!persist)\r\n      return;\r\n    if (!(store.$id in pinia.state.value)) {\r\n      const original_store = pinia._s.get(store.$id.replace(\"__hot:\", \"\"));\r\n      if (original_store)\r\n        Promise.resolve().then(() => original_store.$persist());\r\n      return;\r\n    }\r\n    const persistences = (Array.isArray(persist) ? persist.map((p) => normalizeOptions(p, factoryOptions)) : [normalizeOptions(persist, factoryOptions)]).map(parsePersistence(factoryOptions, store)).filter(Boolean);\r\n    store.$persist = () => {\r\n      persistences.forEach((persistence) => {\r\n        persistState(store.$state, persistence);\r\n      });\r\n    };\r\n    store.$hydrate = ({ runHooks = true } = {}) => {\r\n      persistences.forEach((persistence) => {\r\n        const { beforeRestore, afterRestore } = persistence;\r\n        if (runHooks)\r\n          beforeRestore == null ? void 0 : beforeRestore(context);\r\n        hydrateStore(store, persistence);\r\n        if (runHooks)\r\n          afterRestore == null ? void 0 : afterRestore(context);\r\n      });\r\n    };\r\n    persistences.forEach((persistence) => {\r\n      const { beforeRestore, afterRestore } = persistence;\r\n      beforeRestore == null ? void 0 : beforeRestore(context);\r\n      hydrateStore(store, persistence);\r\n      afterRestore == null ? void 0 : afterRestore(context);\r\n      store.$subscribe(\r\n        (_mutation, state) => {\r\n          persistState(state, persistence);\r\n        },\r\n        {\r\n          detached: true\r\n        }\r\n      );\r\n    });\r\n  };\r\n}\r\n\r\n// src/index.ts\r\nvar src_default = createPersistedState();\r\nexport {\r\n  createPersistedState,\r\n  src_default as default\r\n};\r\n"],
  "mappings": ";;;;;AAAA;;;ACAA;AACA,kBAAkB,GAAG;AACnB,SAAO,OAAO,MAAM,YAAY,MAAM;AAAA;AAExC,0BAA0B,SAAS,gBAAgB;AACjD,YAAU,SAAS,WAAW,UAA0B,OAAO,OAAO;AACtE,SAAO,IAAI,MAAM,SAAS;AAAA,IACxB,IAAI,QAAQ,KAAK,UAAU;AACzB,UAAI,QAAQ;AACV,eAAO,QAAQ,IAAI,QAAQ,KAAK;AAClC,aAAO,QAAQ,IAAI,QAAQ,KAAK,aAAa,QAAQ,IAAI,gBAAgB,KAAK;AAAA;AAAA;AAAA;AAMpF,aAAa,OAAO,MAAM;AACxB,SAAO,KAAK,OAAO,CAAC,KAAK,MAAM;AAC7B,WAAO,OAAO,OAAO,SAAS,IAAI;AAAA,KACjC;AAAA;AAEL,aAAa,OAAO,MAAM,KAAK;AAC7B,SAAO,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,KAAK,MAAM;AAC1C,QAAI,gBAAgB,KAAK;AACvB,aAAO;AAAA;AAEP,aAAO,IAAI,KAAK,IAAI,MAAM;AAAA,KAC3B,OAAO,KAAK,KAAK,SAAS,MAAM,KAAK;AAAA;AAE1C,cAAc,WAAW,OAAO;AAC9B,SAAO,MAAM,OAAO,CAAC,UAAU,SAAS;AACtC,UAAM,YAAY,KAAK,MAAM;AAC7B,WAAO,IAAI,UAAU,WAAW,IAAI,WAAW;AAAA,KAC9C;AAAA;AAIL,0BAA0B,gBAAgB,OAAO;AAC/C,SAAO,CAAC,MAAM;AACZ,QAAI;AACJ,QAAI;AACF,YAAM;AAAA,QACJ,UAAU;AAAA,QACV,gBAAgB;AAAA,QAChB,eAAe;AAAA,QACf,aAAa;AAAA,UACX,WAAW,KAAK;AAAA,UAChB,aAAa,KAAK;AAAA;AAAA,QAEpB,MAAM,MAAM;AAAA,QACZ,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN;AACJ,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAO,OAAK,eAAe,QAAQ,OAAO,KAAK,CAAC,MAAM,GAAG,OAAO,OAAO,WAAW,MAAM,IAAI,MAAM;AAAA,QAClG;AAAA,QACA;AAAA;AAAA,aAEK,GAAP;AACA,UAAI,EAAE;AACJ,gBAAQ,MAAM,iCAAiC;AACjD,aAAO;AAAA;AAAA;AAAA;AAIb,sBAAsB,OAAO,EAAE,SAAS,YAAY,KAAK,SAAS;AAChE,MAAI;AACF,UAAM,cAAc,WAAW,OAAO,SAAS,QAAQ,QAAQ;AAC/D,QAAI;AACF,YAAM,OAAO,cAAc,OAAO,SAAS,WAAW,YAAY;AAAA,WAC7D,GAAP;AACA,QAAI;AACF,cAAQ,MAAM,iCAAiC;AAAA;AAAA;AAGrD,sBAAsB,OAAO,EAAE,SAAS,YAAY,KAAK,OAAO,SAAS;AACvE,MAAI;AACF,UAAM,UAAU,MAAM,QAAQ,SAAS,KAAK,OAAO,SAAS;AAC5D,YAAQ,QAAQ,KAAK,WAAW,UAAU;AAAA,WACnC,GAAP;AACA,QAAI;AACF,cAAQ,MAAM,iCAAiC;AAAA;AAAA;AAGrD,8BAA8B,iBAAiB,IAAI;AACjD,SAAO,CAAC,YAAY;AAClB,UAAM,EAAE,OAAO,UAAU;AACzB,UAAM;AAAA,MACJ,SAAS,EAAE,UAAU;AAAA,MACrB;AAAA,MACA;AAAA,QACE;AACJ,QAAI,CAAC;AACH;AACF,QAAI,CAAE,OAAM,OAAO,MAAM,MAAM,QAAQ;AACrC,YAAM,iBAAiB,MAAM,GAAG,IAAI,MAAM,IAAI,QAAQ,UAAU;AAChE,UAAI;AACF,gBAAQ,UAAU,KAAK,MAAM,eAAe;AAC9C;AAAA;AAEF,UAAM,eAAgB,OAAM,QAAQ,WAAW,QAAQ,IAAI,CAAC,MAAM,iBAAiB,GAAG,mBAAmB,CAAC,iBAAiB,SAAS,kBAAkB,IAAI,iBAAiB,gBAAgB,QAAQ,OAAO;AAC1M,UAAM,WAAW,MAAM;AACrB,mBAAa,QAAQ,CAAC,gBAAgB;AACpC,qBAAa,MAAM,QAAQ;AAAA;AAAA;AAG/B,UAAM,WAAW,CAAC,EAAE,WAAW,SAAS,OAAO;AAC7C,mBAAa,QAAQ,CAAC,gBAAgB;AACpC,cAAM,EAAE,eAAe,iBAAiB;AACxC,YAAI;AACF,2BAAiB,OAAO,SAAS,cAAc;AACjD,qBAAa,OAAO;AACpB,YAAI;AACF,0BAAgB,OAAO,SAAS,aAAa;AAAA;AAAA;AAGnD,iBAAa,QAAQ,CAAC,gBAAgB;AACpC,YAAM,EAAE,eAAe,iBAAiB;AACxC,uBAAiB,OAAO,SAAS,cAAc;AAC/C,mBAAa,OAAO;AACpB,sBAAgB,OAAO,SAAS,aAAa;AAC7C,YAAM,WACJ,CAAC,WAAW,UAAU;AACpB,qBAAa,OAAO;AAAA,SAEtB;AAAA,QACE,UAAU;AAAA;AAAA;AAAA;AAAA;AAQpB,IAAI,cAAc;;;AD1IwD,IAAO,sCAAQ;",
  "names": []
}
